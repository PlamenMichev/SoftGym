@model SoftGym.Web.ViewModels.Trainers.MyTrainersViewModel

@using SoftGym.Web.ViewModels.Trainers
@using SoftGym.Data.Models
@using Microsoft.AspNetCore.Identity
@{
    this.ViewData["Title"] = "My Trainers";
}


@inject UserManager<ApplicationUser> userManager

<h2 class="text-center m-3">@this.ViewData["Title"]</h2>
<hr />

<div class="row">
    <div class="col-md-4">
        <input id="userId" name="userId" value="" hidden>
        <div class="img-fluid">
            <div class="container-fluid h-100">
                <div class="row justify-content-center h-100">
                    <div class="card-chat card">
                        <div class="card-header msg_head">
                            <div class="d-flex bd-highlight">
                                <div class="img_cont">
                                    <img src="" class="rounded-circle user_img"
                                         id="userImage">
                                </div>
                                <div class="user_info">
                                    <span id="userName"></span>
                                    <p>1767 Messages</p>
                                </div>
                            </div>
                        </div>
                        <div class="card-body msg_card_body">
                            <div class="d-flex justify-content-start mb-4">
                                <div class="img_cont_msg">
                                    <img src="https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg" class="rounded-circle user_img_msg">
                                </div>
                                <div class="msg_cotainer">
                                    Hi, how are you samim?
                                    <span class="msg_time">8:40 AM, Today</span>
                                </div>
                            </div>
                            <div class="d-flex justify-content-end mb-4">
                                <div class="msg_cotainer_send">
                                    Hi Khalid i am good tnx how about you?
                                    <span class="msg_time_send">8:55 AM, Today</span>
                                </div>
                                <div class="img_cont_msg">
                                    <img src="https://thumbor.forbes.com/thumbor/fit-in/416x416/filters%3Aformat%28jpg%29/https%3A%2F%2Fspecials-images.forbesimg.com%2Fimageserve%2F5d2388f14c687b00085c0f91%2F0x0.jpg%3Fbackground%3D000000%26cropX1%3D0%26cropX2%3D1559%26cropY1%3D130%26cropY2%3D1690" class="rounded-circle user_img_msg">
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="input-group">
                                <div class="input-group-append">
                                    <span class="input-group-text attach_btn"><i class="fas fa-paperclip"></i></span>
                                </div>
                                <textarea name="" class="form-control type_msg" placeholder="Type your message..."></textarea>
                                <div class="input-group-append">
                                    <span class="input-group-text send_btn"><i class="fas fa-location-arrow"></i></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <ul class="list-group">
            @foreach (var trainer in Model.Trainers)
            {
                <div class="row mb-3">
                    <li class="list-group-item col-md-8">
                        <a onclick="changeUserData('@trainer.Id')" href="#">
                            @trainer.FirstName @trainer.LastName - @trainer.ClientsCount clients
                        </a>
                    </li>
                    <div class="col-md-4 row">
                        <form asp-action="RemoveTrainer" asp-controller="Trainers" method="post" class="col-md-4" id="deleteForm">
                            <input type="text" name="Id" value="@trainer.Id" hidden />
                            <button type="submit" class="btn" style="cursor: pointer" title="Remove From My Trainers"><i class="fas fa-user-times"></i></button>
                        </form>
                        <button data-toggle="modal" data-target="#a@(trainer.Id)a" class="p-2 float-right btn btn-primary col-md-8" style="cursor: pointer">Contacts</button>
                    </div>
                </div>
            }
        </ul>
    </div>
</div>
@section Scripts {
    <script>
        var pictureElement = $("#userImage");
        var nameElement = $("#userName");
        var idElement = $("#userId");
        $(window).load(function () {
            @if (!Model.Trainers.Any()) {
                @: return;
            }
            var otherUserId = "@Model?.Trainers.Select(x => x.Id).FirstOrDefault()";
            if (otherUserId) {
                $("#userId").attr('value', otherUserId);
                $.ajax({
            type: "GET",
            url: "/Users/GetChatData",
            data:
            {
                id: otherUserId
            },
                success: function (data) {
                    pictureElement.attr('src', data.profilePictureUrl);
                    nameElement.text(data.firstName + " " + data.lastName);
                    idElement.attr('value', data.id);
                }
            });
            }
        });

        function changeUserData(id) {
            $.ajax({
            type: "GET",
            url: "/Users/GetChatData",
            data:
            {
                id: id
            },
                success: function (data) {
                    pictureElement.attr('src', data.profilePictureUrl);
                    nameElement.text(data.firstName + " " + data.lastName);
                    idElement.attr('value', data.id);
                }
            });
        }

         function SaveMessage (messageInput) {
            let inputModel = JSON.stringify({
                UserId: idElement.val(),
                Message: messageInput
            });
        var token = $("#deleteForm input[name=__RequestVerificationToken").val();

             console.log(inputModel);
             $.ajax({
                 type: "POST",
                 url: "/api/Messages",
                 contentType: "application/json",
                 headers: { "X-CSRF-TOKEN": token },
                 data: inputModel,
                 dataType: "json",
                success: function (data) {
                    console.log("kef");
                }
            });
        }


    @{var user = await this.userManager.GetUserAsync(this.User);}
    @{ApplicationUser otherChatUser = this.userManager
                .Users
                .FirstOrDefault(x => x.Id == "e6aa5334-a60c-4a0c-8f8f-02d5a22a5219"
            ); }
        var connection =
            new signalR.HubConnectionBuilder()
                .withUrl("/chat")
                .build();

        connection.on("RecieveMessage", function (message) {
            var messageElement = `
                            <div class="d-flex justify-content-start mb-4">
                                <div class="img_cont_msg">
                                    <img src="@user.ProfilePictureUrl" class="rounded-circle user_img_msg">
                                </div>
                                <div class="msg_cotainer">
                                        <div>
                                        ${message}
                                        </div>
                                    <span class="msg_time mt-2">8:40 AM, Today</span>
                                </div>
                            </div>`
            $("div.card-body").append(messageElement);
            $('div.card-body').scrollTop($('div.card-body')[0].scrollHeight - $('div.card-body')[0].clientHeight);
        });

        connection.on("SendMessage", function (message) {
            var messageElement = `
                            <div class="d-flex justify-content-end mb-4">
                                <div class="msg_cotainer_send">
                                    <div class="">
                                        ${message}
                                    </div>
                                    <span class="msg_time_send mt-2">8:55 AM, Today</span>
                                </div>
                                <div class="img_cont_msg">
                                    <img src="@user.ProfilePictureUrl" class="rounded-circle user_img_msg">
                                </div>
                            </div>`
            $("div.card-body").append(messageElement);
            $('div.card-body').scrollTop($('div.card-body')[0].scrollHeight - $('div.card-body')[0].clientHeight);
            SaveMessage(message);
        });

        $(".send_btn").click(function () {
            var message = $("textarea").val();
            var userId = $("#userId").val();
            var model = {
                message: message,
                userId: userId
            }
            connection.invoke("Send", model);
            $("textarea").val("");
            $("textarea").focus();
        });

        connection.start();
    </script>
}
@foreach (var trainer in Model.Trainers)
{
    var viewModel = new TrainerViewModel()
    {
        Id = trainer.Id,
        FirstName = trainer.FirstName,
        LastName = trainer.LastName,
        PhoneNumber = trainer.PhoneNumber,
        Email = trainer.Email,
    };

    <partial name="_DetailsPartial" , model="@viewModel" />
}