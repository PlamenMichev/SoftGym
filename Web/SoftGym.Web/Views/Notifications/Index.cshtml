@model SoftGym.Web.ViewModels.Notifications.IndexViewModel

@{
    ViewData["Title"] = "Notifications";
}

<h1 class="text-center">Notifications</h1>
<hr />
@if (Model.Notifications.Any())
{
    @foreach (var notification in Model.Notifications.OrderByDescending(x => x.CreatedOn))
    {
        var timeSince = DateTime.UtcNow.Subtract(notification.CreatedOn).TotalMinutes;
        
        <div class="bg-primary mt-3">
            <div class="toast-header">
                <svg class="bd-placeholder-img rounded mr-2" width="20" height="20" xmlns="http://www.w3.org/2000/svg"
                     preserveAspectRatio="xMidYMid slice" focusable="false" role="img">
                    @if (notification.IsRead == false)
                    {
                        <rect fill="#007aff" width="100%" height="100%" />
                        <strong class="mr-auto">New</strong>
                    }
                    else
                    {
                        <rect fill="gray" width="100%" height="100%" />
                        <strong class="mr-auto">Seen</strong>
                    }
                </svg>
                @if (timeSince >= 60)
                {
                    if (timeSince >= 1440)
                    {
                        <small>@DateTime.UtcNow.Subtract(notification.CreatedOn).TotalDays.ToString("f0") days ago</small>
                    }
                    else
                    {
                        <small>@DateTime.UtcNow.Subtract(notification.CreatedOn).TotalHours.ToString("f0") hours ago</small>
                    }
                }
                else
                {
                    if (timeSince < 1)
                    {
                        <small>@DateTime.UtcNow.Subtract(notification.CreatedOn).TotalSeconds.ToString("f0") seconds ago</small>
                    }
                    else
                    {
                        <small>@timeSince.ToString("f0") mins ago</small>
                    }
                }
                <form asp-controller="Notifications" asp-action="Delete" method="post">
                    <input type="number" name="notificationId" value="@notification.Id" hidden />
                    <button type="submit" class="ml-2 mb-1 close" title="Delete">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </form>
            </div>
            <div class="toast-body text-white row">
                <div class="col-md-10">
                    @notification.Content
                </div>
                <div class="col-md-2">
                    <form asp-area="" asp-controller="Notifications" asp-action="See" method="post" id="deleteForm">
                        <input type="text" name="url" value="@notification.Url" hidden />
                        <input type="text" name="notificationId" value="@notification.Id" hidden />
                        <button class="btn btn-warning float-right">
                            See
                        </button>
                    </form>
                </div>
            </div>
        </div>
    }
}
else
{
    <div class="alert alert-info col-md-12 text-center" role="alert">
        You have no notifications.
    </div>
}

<script>
    window.onload = function (event) {
        event.preventDefault();
        var token = $("#deleteForm input[name=__RequestVerificationToken").val();
        $.ajax({
            type: "POST",
            url: "/Notifications/SeeAll",
            headers: { "X-CSRF-TOKEN": token },
            data:
            {
                UserId: "@Model.Notifications?.Select(x => x.UserId).First()"
            }
        });
    };
</script>
